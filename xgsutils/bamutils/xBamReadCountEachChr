#!/bin/bash
BIOINFO_TOOL_XGSUTILS=/Users/fengzeng/tool/xgsutils
xgsutils_averageDepth="$BIOINFO_TOOL_XGSUTILS/bamutils/xBamAverageDepth"

# help message
help(){
  >&2 echo "SYNOPSIS"
  >&2 echo "    xBamReadCountEachChr [OPTIONS] <GENOME_FASTA> <BAM_FILE>"
  >&2 echo ""
  >&2 echo "DESCRIPTION"
  >&2 echo "    Compute the read count on each chromosome"
  >&2 echo ""
  >&2 echo "OPTIONS"
  >&2 echo "    -r,--roi       specify the region of interest [STR]"
  >&2 echo "    -q,--mq        skip reads with mapping quality less then the value [INT]"
  >&2 echo "    -f,--ff        skip reads with the specified flags [INT]"
  >&2 echo "    -s,--strand    read strand (\"+\" or \"-\")" 
  >&2 echo "    -i,--iden      skip reads with identity less than the value [FLT]"
  >&2 echo "    -h,--help      print help message"
  exit 0
}

# print help if no arguments provide
if [ "$#" = 0 ];then help;fi

PARSED_OPTIONS=$(getopt -n "$0" -o r:q:f:s:i:h --long roi:,mq:,ff:,strand:,iden:,help -- "$@")

# bad argument
if [ $? -ne 0 ];then help;fi

# A little magic, necessary when using getopt
eval set -- "$PARSED_OPTIONS"

rname=""
roi=""
mq=""
ff=""
rf=""
iden=0
# parse arguments
while true;do
  case "$1" in
    -h | --help )
      help
      shift;;
    -r | --roi )
      rname=$2
      roi="-r $2"
      shift 2;;
    -q | --mq )
      mq="-q $2"
      shift 2;;
    -f | --ff )
      ff="-f $2 $ff"
      shift 2;;
    -s | --strand )
      if [ "$2" = "+" ];then rf="-F 0x10";fi
      if [ "$2" = "-" ];then rf="-f 0x10";fi
      shift 2;;
    -i | --iden )
      iden=$2
      shift 2;;
    -- )
      shift
      break;;
  esac
done

# genome file
genomeFile=$1 && shift
# bam file
bamFile=$1

# if roi is specified
if [ ! -z "$roi" ]
then
  readCount=$($BIOINFO_TOOL_XGSUTILS/bamutils/xBamToBedByRead $mq $ff $roi $bamFile 2>/dev/null | awk -v iden="$iden" '{if($6>=iden){print}}' | wc -l)
  echo -e "$rname\t$readCount" 
  exit 0
fi

# number of chromosomes
numChr=$(wc -l "$genomeFile.fai" | awk '{print $1}')
# loop over chromosomes
for i in $(seq 1 $numChr)
do
  chrName=$(awk -v n=$i 'NR==n{print $1}' "$genomeFile.fai")
  readCount=$($BIOINFO_TOOL_XGSUTILS/bamutils/xBamToBedByRead $mq $ff -r $chrName $bamFile 2>/dev/null | awk -v iden="$iden" '{if($6>=iden){print}}' | wc -l)
  #samtools view -b $rf $ff $mq $bamFile > xgstemp.bam
  #samtools index xgstemp.bam
  #readCount=$(samtools view -c xgstemp.bam $chrName)
  echo -e "$chrName\t$readCount"
  #rm xgstemp.bam*
done
